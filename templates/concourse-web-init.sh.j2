#!/bin/bash
### BEGIN INIT INFO
# Provides:          concourse-web
# Required-Start:    $local_fs $network $remote_fs $syslog
# Required-Stop:     $local_fs $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: concourse web
# Description:       This script starts and stops the concourse web service daemon
### END INIT INFO
# {{ ansible_managed }}

NAME="ConcourseWeb"
DESC="Concourse-Web"

RUN_AS_USER="{{ concourseci_user }}"
RUN_AS_GROUP="{{ concourseci_group }}"

BASE_DIR="{{ concourseci_bin_dir }}"
GREP_NAME="{{ concourseci_bin_dir }}/concourse web"

RUN_CMD="{{ concourseci_bin_dir }}/concourse-web"

ATTEMPTS_TO_CHECK_PID=4

PROG_PID() {
    check_prog=$(ps aux | grep -e "${GREP_NAME}" | grep -v grep | awk '{ print $2 }' )
    echo ${check_prog}
}

SLEEP_FOR_WHILE(){
    for i in $(seq ${ATTEMPTS_TO_CHECK_PID}); do
        sleep 1
        echo -n "."
    done
}

start() {
    PID=$(PROG_PID)
    if  [ -n "${PID}" ] ; then
        echo "${NAME} is already running (PID: ${PID})"
    else
        echo -n  "Starting $NAME "

        #Start quite background uid and gid
        start-stop-daemon --start --background --name ${NAME} --chdir ${BASE_DIR} --chuid ${RUN_AS_USER} \
                          --group ${RUN_AS_GROUP} --exec ${RUN_CMD} || echo "[ FAILED ]" || exit 1

        SLEEP_FOR_WHILE
        if [ -n "$(PROG_PID)" ]; then
            echo "[ OK ]"
        else
            echo "[ FAILED ]"
            exit 1
        fi
    fi
}

stop() {
    PID=$(PROG_PID)
    if [ -n "${PID}" ]; then
        echo -n  "Stoping ${NAME} "
        kill -9 ${PID} || /bin/true

        SLEEP_FOR_WHILE
        if [ -n "$(PROG_PID)" ]; then
            echo "[ FAILED ]"
            exit 1
        else
            echo "[ OK ]"
        fi
    else
        echo "${NAME} not running."
    fi
}

status() {
    PID=$(PROG_PID)
    if [ -n "${PID}" ]; then
        echo "${NAME} is running with PID:${PID}"
    else
        echo "${NAME} is not running"
    fi
}

case "$1" in
 start)
        start ;;
 stop)
        stop ;;
 restart)
       stop
       start ;;
 status)
       status ;;
*)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1 ;;
esac
exit 0
